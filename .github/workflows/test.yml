name: Test

on:
  # issue_comment:
  #   types: [created]
  pull_request:

jobs:
  read_comment:
    # if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/ut') }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      # should_build_pkgs: ${{ steps.set-apps.outputs.should_build_pkgs }}
    steps:
      - uses: actions/checkout@v4
      - name: Get apps
        id: get-apps
        shell: bash
        env:
          # COMMENT: ${{ github.event.comment.body }}
          COMMENT: "/ut search host funnel"
        run: |
          if [[ $COMMENT == "/ut" ]]; then
            all_apps=$(find src -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | tr '\n' ' ')
            apps_as_string=$all_apps
          else
            apps_as_string="${COMMENT:4}"
          fi

          echo "apps_as_string=\"$apps_as_string\"" >> $GITHUB_OUTPUT

      - name: Prepare matrix
        id: set-matrix
        shell: bash
        run: |
          apps_as_string=${{ steps.get-apps.outputs.apps_as_string }}

          # Initialize the JSON array
          matrix_json="{\"include\":["

          # Extract the apps from the input string
          for workspace in $(echo $apps_as_string | cut -d ' ' -f 1-); do
            if [ "$workspace" = "host" ]; then
              should_build_pkgs=true
            else
              should_build_pkgs=false
            fi
            matrix_json+="{\"workspace\":\"$workspace\",\"should_build_pkgs\":$should_build_pkgs},"
          done

          # Remove the trailing comma and close the JSON array
          matrix_json=${matrix_json%,}
          matrix_json+="]}"

          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
  build:
    needs: read_comment
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.read_comment.outputs.matrix) }}

    steps:
      - name: Display the current app and build setting
        run: |
          echo "App: ${{ matrix.workspace }}"
          echo "Should Build Packages: ${{ matrix.should_build_pkgs }}"
